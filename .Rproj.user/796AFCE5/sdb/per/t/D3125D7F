{
    "collab_server" : "",
    "contents" : "---\ntitle: \"A (Light) Introduction to Git and GitHub\"\nsubtitle: \"...using the command line!\"\nauthor: \"Brandon M. Greenwell\"\ndate: \"July 27, 2017\"\noutput:\n  ioslides_presentation:\n    logo: logo.png\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n\n## What you will learn\n\n* Git\n    - what is Git?\n    - installing Git on your machine\n    - basic commands\n    - setting up a Git repo on a local machine\n\n* GitHub\n    - what is GitHub?\n    - signing up\n    - connecting your local Git repo to GitHub\n    - selecting an awesome avatar will not be covered\n\n\n# \n\n```{r, out.width = \"400px\", fig.align = \"center\"}\nknitr::include_graphics(\"Git.png\")\n```\n\n\n## Bad version control\n\n<div class=\"columns-2\">\n* File renaming\n* Absurd folder structures\n* Zip files\n* E-mailing files back and forth\n* Lost files\n* Ever try merging two MS Word documents with tracked changes?!\n\n```{r, out.width = \"300px\"}\nknitr::include_graphics(\"before-version-control.png\")\n```\n</div>\n\n\n## \n\n<center>![](giphy-frustrated.gif)</center>\n\n\n\n##\n\n```{r, out.width = \"600px\"}\nknitr::include_graphics(\"fever.jpg\")\n```\n\n\n## What is Git?\n\n* Think of it as MS Word's \"Tracked Changes\" on steroids\n* Invented by Linus Torvalds (and the Linux development community) in 2005\n* Git provides an excellent way to track changes in computer files (e.g., R scripts, LaTeX files, etc.) and coordinating among many users.\n* Free book on the Git website: https://git-scm.com/book/en/v2\n\n```{r, out.width = \"150px\"}\nknitr::include_graphics(\"progit2.png\")\n```\n\n\n## Using Git\n\nThere are a lot of different ways to use Git, for example, the **command line**, one of several desktop applications, and even within RStudio.\n\n* I recommend the command line for three reasons: **(1)** it's simpler (trust me), **(2)** it's (probably) faster, and **(3)** it works the same on Windows, Mac, and Linux\n* You'll need to know how to open the Terminal in Mac or Command Prompt or Powershell in Windows\n* Using it via RStudio is convenient, especially if you're building R packages, etc.\n* The desktop application is convenient too, but not available on all operating systems\n\n\n##\n\nThe basic Git workflow goes something like this:\n\n1. You modify files in your working tree.\n2. You stage the files, adding snapshots of them to your staging area.\n3. You do a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.\n\n\n## Installing Git\n\nInstallation is rather straightforward: https://git-scm.com/downloads. Just follow the instructions for your particular operating system\n\n**Tip\\:** Windows users, you should install from here: https://git-for-windows.github.io/\n\n## Setting Git up for the first time\n\nAfter Git is successfully installed, open up a terminal and write (with the obvious modifications) the following two lines:\n```shell\n$ git config --global user.name \"Brandon Greenwell\"\n$ git config --global user.email greenwell.brandon@gmail.com\n```\n**Note:** Since you passed the option `--global`, you only need to do this once!\n\n**Note:** Technically, you don't need to do this step, but you should!\n\n**Note:** Windows users should use the Bash terminal that was installed with Git, not the normal Windows command line!\n\n\n## The basic commands you'll use/need\n- `cd` (change directories)\n- `git init` (initialize a folder as a Git repo)\n- `git add <file-name>` (start tracking a new file)\n- `git commit -m \"fix typo\"` (commit your changes)\n- `git clone` (clone/copy another Git repo [e.g., from GitHub])\n- `git push origin master` (push your master branch to your origin server)\n- `git pull origin master` (update your local repo)\n\n**Tip\\:** Typing `git add --all` will start tracking everything (this is how I almost always use `git add`).\n\n\n## Initializing a repo in an existing directory\n\nIf you want to begin tracking an existing project in Git, you need to start by going to the projectâ€™s root directory. For example, \n```shell\ncd C:/Users/greenweb/Desktop/devel/pkgbday\n```\ntakes me to the subfolder called `pkgday` on my Desktop. Then, to initialize this as a Git repo, just type\n```shell\ngit init\n```\n\n\n**Tip\\:** the command line has a history (just like the R console), so you don't need to type as often; just hit the up arrow and make any necessary changes!\n\n\n## Initializing a repo in an existing directory\n\nIf you want to start version controlling all the files, you need to start tracking them. In the terminal, type the following:\n```shell\ngit add --all\n```\nthen type:\n```shell\ngit commit -m \"very brief descriptive message\"\n```\n\n\n## Initializing a repo in an existing directory\n\nNow Git will start tracking all the files in the repo. Whenever you make changes to ANY file in this repo, just retype the commands* with a new descriptive message:\n```shell\ngit add --all\ngit commit -m \"added new plot function\"\n```\n\n**Tip\\:** It's good practice to do this every time you make a key change (e.g., fix a typo, add a new function to an R script, etc.).\n\n\\* Make sure you're in the right directory!\n\n\n## All done!\n\n<center>![](giphy-shaun.gif)</center>\n\n\n# GitHub\n\n```{r, out.width = \"600px\"}\nknitr::include_graphics(\"Octocat.png\")\n```\n\n\n## What is GitHub?\n\n- GitHub is a web-based Git repo and Internet hosting service\n- It is the single largest host for Git repos\n- Quite popular for code collaboration (no more emails and zip files!!)\n- Mostly used for code\n- The development versions of a lot of R packages are hosted on GitHub: https://github.com/tidyverse/ggplot2\n- All the [cool people](https://github.com/bgreenwell) are using it!\n\n\n## Account setup and configuration\n\nThe first thing you need to do is set up an account: https://github.com/\n\n```{r, out.width = \"400px\"}\nknitr::include_graphics(\"signup.png\")\n```\n\nThen go check your e-mail to verify the e-mail address you provided.\n\n\n## Set up your profile\n\n```{r, out.width = \"800px\"}\nknitr::include_graphics(\"my-profile.png\")\n```\n\n\n## Creating a new repo\n\n```{r, out.width = \"600px\"}\nknitr::include_graphics(\"new-repo.png\")\n```\n\n\n## Creating a new repo\n\n```{r, out.width = \"600px\"}\nknitr::include_graphics(\"new-repo-2.png\")\n```\n\n\n\n## Creating a new repo\n\n```{r, out.width = \"600px\"}\nknitr::include_graphics(\"new-repo-3.png\")\n```\n\n\n",
    "created" : 1501156991053.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1097718745",
    "id" : "D3125D7F",
    "lastKnownWriteTime" : 1502041028,
    "last_content_update" : 1502041028607,
    "path" : "C:/Users/greenweb/Desktop/devel/git-tutorial/git-tutorial.Rmd",
    "project_path" : "git-tutorial.Rmd",
    "properties" : {
        "last_setup_crc32" : "",
        "tempName" : "Untitled2"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}